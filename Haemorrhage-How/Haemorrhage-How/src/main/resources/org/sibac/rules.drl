/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.sibac;

import org.sibac.model.Evidence;
import org.sibac.model.Hypothesis;
import org.sibac.model.Conclusion;
import org.sibac.model.Fact;

import function org.sibac.view.UI.answer;

query "Conclusions"
	$conclusion : Conclusion()
end

rule "r1"
	when
		eval(answer(Evidence.CISTOSCOPIA_FACT, "sim" ))
	then
		Hypothesis h = new Hypothesis("Analisar dado", "PSA");
		insert(h);
end

rule "r2"
	when
	    Hypothesis( description == "Analisar dado", value == "PSA")
		eval(answer(Evidence.CISTOSCOPIA_PSA, "sim" ))
	then
		Hypothesis h = new Hypothesis("Realizar exame", "Tomografia");
		insert(h);
end

rule "r3"
	when
	    Hypothesis( description == "Realizar exame", value == "Tomografia")
		eval(answer(Evidence.CISTOSCOPIA_TOMOGRAFIA, "sim" ))
	then
		Hypothesis h = new Hypothesis("Realizar exame", "Biopsia");
		insert(h);
end

rule "r4"
	when
	    Hypothesis( description == "Realizar exame", value == "Biopsia")
		eval(answer(Evidence.CISTOSCOPIA_BIOPSIA, "sim" ))
	then
		Conclusion c = new Conclusion(Conclusion.CANCRO_PROSTATA);
		insert(C);
end

rule "r5"
	when
		eval(answer(Evidence.UROTAC_FACT, "sim" ))
	then
		Hypothesis h = new Hypothesis("Doença", "Presença de doença");
		insert(h);
end

rule "r6"
	when
	    Hypothesis( description == "Doença", value == "Presença de doença")
		eval(answer(Evidence.UROTAC_RESULT, "pedras" ))
	then
		Conclusion c = new Conclusion(Conclusion.PEDRAS_RINS);
		insert(c);
end

rule "r7"
	when
	    Conclusion(Conclusion.PEDRAS_RINS)
		eval(answer(Evidence.UROTAC_PEDRAS, "pequeno" ))
	then
		Conclusion c = new Conclusion(Conclusion.BEBER_AGUA);
		insert(c);
end

rule "r8"
	when
	    Conclusion(Conclusion.PEDRAS_RINS)
		eval(answer(Evidence.UROTAC_PEDRAS, "medio" ))
	then
		Conclusion c = new Conclusion(Conclusion.TOMAR_MEDICAMENTO);
		insert(c);
end

rule "r9"
	when
	    Conclusion(Conclusion.PEDRAS_RINS)
		eval(answer(Evidence.UROTAC_PEDRAS, "alto" ))
	then
		Conclusion c = new Conclusion(Conclusion.REALIZAR_CIRURGIA);
		insert(c);
end

rule "r10"
	when
	    Hypothesis( description == "Doença", value == "Presença de doença")
		eval(answer(Evidence.UROTAC_RESULT, "hbp" ))
	then
		Hypothesis h = new Hypothesis("Doença", "Presença de HBP");
		insert(h);
end

rule "r11"
	when
	    Hypothesis( description == "Doença", value == "Presença de HBP")
		eval(answer(Evidence.UROTAC_HBP_ULTRASSONOGRAFIA, "anormal" ))
	then
		Conclusion c = new Conclusion(Conclusion.HBP_ANORMAL);
		insert(c);
end

rule "r12"
	when
	    Hypothesis( description == "Doença", value == "Presença de HBP")
		eval(answer(Evidence.UROTAC_HBP_ULTRASSONOGRAFIA, "normal" ))
	then
		Conclusion c = new Conclusion(Conclusion.HBP_ANORMAL);
		insert(c);
end

rule "r13"
	when
	    Conclusion(Conclusion.HBP_ANORMAL)
	then
		Conclusion c = new Conclusion(Conclusion.TRATAMENTO_HBP);
		insert(c);
end

rule "r14"
	when
	    Conclusion(Conclusion.HBP_NORMAL)
	then
		Conclusion c = new Conclusion(Conclusion.NAO_HA_TRATAMENTO);
		insert(c);
end

rule "r15"
	when
	    // Falta a logica difusa
	    eval(answer(Evidence.CANCRO_RISCO, "intermedio"))
	then
		Conclusion c = new Conclusion(Conclusion.NAO_HA_TRATAMENTO);
		insert(c);
end

rule "unknown"
	when
		not Conclusion()
	then
		Conclusion c = new Conclusion(Conclusion.UNKNOWN);
		insert(c);
end

query "evidence"(String ev, String v)
	e : Evidence( evidence == ev, value == v )
end

